{"version":3,"sources":["Square.js","Board.js","click-sound.wav","Game.js","index.jsx"],"names":["Square","props","className","slot_flag","onClick","symbol","Board","i","flag","this","stored_slots","JSON","parse","window","localStorage","getItem","win_slots","lines","length","a","b","c","line_to_return","Find_win_slots","id","renderSquare","React","Component","Winner","winnerPlayer","ResetButton","Game","table","nextPlayer","state","slots","Player_X_is_next","isMovePossible","slice","Clear_Board","setState","Audio","clickSound","play","then","catch","error","console","log","includes","handleResetButton","setItem","stringify","winner","Find_Winner","winner_message","Next_player","fullBoardFlag","handleClick","renderWinnerText","renderResetButton","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9eede1ee.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Square(props) {  \n    return (        \n      <button className={'square '+ props.slot_flag} onClick={props.onClick}>\n        {props.symbol}  \n      </button>\n    ); \n}\nexport default Square;","import Square from \"./Square.js\";\nimport React from \"react\";\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    var flag;\n    this.stored_slots = JSON.parse(window.localStorage.getItem(\"table\"));\n\n    if (\n      this.win_slots &&\n      (this.win_slots[0] === i ||\n        this.win_slots[1] === i ||\n        this.win_slots[2] === i)\n    ) {\n      flag = \"win\";\n    } else {\n      flag = \"neutral\";\n    }\n\n    return (\n      <Square\n        className={\"bob\"}\n        slot_flag={flag}\n        symbol={this.stored_slots[i]}\n        onClick={() => this.props.onClick(i)}\n      />\n    );\n  }\n\n  render() {\n    this.win_slots = Find_win_slots(this.stored_slots);\n    return (\n      <div id=\"board\">\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction Find_win_slots(stored_slots) {\n  stored_slots = JSON.parse(window.localStorage.getItem(\"table\"));\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (\n      stored_slots[a] &&\n      stored_slots[a] === stored_slots[b] &&\n      stored_slots[a] === stored_slots[c]\n    ) {\n      var line_to_return = lines[i];\n      //var slot_symbol_to_return = stored_slots[i]\n    }\n  }\n  //this.setState({win_slots: line_to_return})\n  return line_to_return;\n  //return null;\n}\n\nexport default Board;\n","export default __webpack_public_path__ + \"static/media/click-sound.ae2de8e7.wav\";","import React from \"react\";\nimport Board from \"./Board.js\";\nimport clickSound from \"./click-sound.wav\"\n\nclass Game extends React.Component {\n  constructor(props) {\n    var table = [];\n    if (localStorage.length !== 0) {\n      var stored_slots = JSON.parse(window.localStorage.getItem(\"table\"));\n      for (let i = 0; i < 9; i++) {\n        table[i] = stored_slots[i];\n      }\n    } else {\n      for (let i = 0; i < 9; i++) {\n        table[i] = null;\n      }\n    }\n    var nextPlayer = true;\n    if (window.localStorage.getItem(\"nextPlayer\") === \"false\") {\n      nextPlayer = false;\n    }\n    super(props);\n    this.state = { slots: table, Player_X_is_next: nextPlayer };\n    this.isMovePossible = true;\n  }\n\n  handleResetButton() {\n    const slots = this.state.slots.slice();\n    //const Next_player = true;\n    Clear_Board(slots);\n    this.setState({ slots: slots /* Player_X_is_next: Next_player */ });\n    this.isMovePossible = true;\n  }\n\n  handleClick(i) {\n    const slots = this.state.slots.slice();\n    if (this.isMovePossible === false) {\n      return;\n    }\n    if (this.state.Player_X_is_next === true && slots[i] === null) {\n      slots[i] = \"X\";\n      this.setState({ slots: slots, Player_X_is_next: false });\n    } else if (this.state.Player_X_is_next === false && slots[i] === null) {\n      slots[i] = \"O\";\n      this.setState({ slots: slots, Player_X_is_next: true });\n    }\n    let audio_click = new Audio(clickSound);\n    audio_click.play().then(() => {\n\n    }).catch(error =>{\n      console.log(\"Missing sound file\")\n    });\n  }\n\n  renderResetButton() {\n    if (this.isMovePossible === false || !this.state.slots.includes(null)) {\n      return (\n        <ResetButton\n          className=\"resetButton\"\n          onClick={() => this.handleResetButton()}\n        ></ResetButton>\n      );\n    } else {\n      return;\n    }\n  }\n\n  renderWinnerText() {\n    window.localStorage.setItem(\"table\", JSON.stringify(this.state.slots));\n    const winner = Find_Winner(this.state.slots);\n  \n    if (winner || !this.state.slots.includes(null)) {\n      this.isMovePossible = false;\n      let winner_message = \"Draw\";\n      if(winner){\n        winner_message = \"The Winner is: Player \" + winner;\n      }\n      return <Winner className=\"winner\" winnerPlayer={winner_message}></Winner>;\n    } else {\n      return \"\";\n    }\n  }\n  //localStorage.setItem(\"table\", '[\"X\",\"O\",\"X\",\"O\",\"X\",\"O\",\"X\",\"O\",\"X\"]')\n  render() {\n    window.localStorage.setItem(\"table\", JSON.stringify(this.state.slots));\n    let Next_player = \"Next player: X\";\n    if (this.state.Player_X_is_next === true) {\n      Next_player = \"Next Player: X\";\n    } else {\n      Next_player = \"Next Player: O\";\n    }\n    window.localStorage.setItem(\"nextPlayer\", this.state.Player_X_is_next);\n    let fullBoardFlag = true;\n    for (let i = 0; i < 9; i++) {\n      if (this.state.slots[i] === null) {\n        fullBoardFlag = false;\n      }\n    }\n    if (this.isMovePossible === false || fullBoardFlag === true) {\n      Next_player = \"GAME OVER!\";\n    }\n\n    return (\n      <div id=\"main\">\n        <div className=\"status\">{Next_player}</div>\n        <Board symbol={this.props.slots} onClick={(i) => this.handleClick(i)} />\n        <div className=\"winner\">{this.renderWinnerText()}</div>\n        <div id=\"reset_button_div\">{this.renderResetButton()}</div>\n      </div>\n\n    );\n  }\n}\n\nfunction Find_Winner(slots) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (slots[a] && slots[a] === slots[b] && slots[a] === slots[c]) {\n      return slots[a];\n    }\n  }\n  return null;\n}\n\nfunction Clear_Board(slots) {\n  for (let i = 0; i < 9; i++) {\n    slots[i] = null;\n  }\n  //console.log(\"Board now is clean\");\n  return slots;\n}\n\nfunction Winner(props) {\n  return <div className=\"winner\">{props.winnerPlayer}</div>;\n}\n\nfunction ResetButton(props) {\n  return (\n    <button className=\"resetButton\" onClick={props.onClick}>\n      RESTART\n    </button>\n  );\n}\n\nexport default Game;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Game from './Game.js';\n\n\n  class App extends React.Component {  \n    render() {         \n      return (\n        <div className=\"game\">\n          <div className=\"game-board\">\n            <Game />\n          </div>\n          <div className=\"game-info\">\n            <div>{/* status */}</div>\n            <ol>{/* TODO */}</ol>\n          </div>\n        </div>\n      );\n    }\n  }\n  \n  // ========================================\n  \n  ReactDOM.render(\n    <App />,\n    document.getElementById('root')\n  );\n    "],"sourceRoot":""}