{"version":3,"sources":["Square.js","Board.js","start-sound.wav","click-sound.wav","end-sound.wav","draw-sound.wav","reset-sound.wav","Game.js","index.jsx"],"names":["Square","props","className","slot_flag","onClick","symbol","Board","i","flag","this","stored_slots","JSON","parse","window","localStorage","getItem","win_slots","lines","length","a","b","c","line_to_return","Find_win_slots","id","renderSquare","React","Component","Winner","winnerPlayer","ResetButton","Game","table","nextPlayer","state","slots","Player_X_is_next","isMovePossible","winner","slice","Clear_Board","setState","Audio","resetSound","play","then","catch","error","console","log","clickSound","includes","handleResetButton","winner_message","endSound","drawSound","Next_player","setItem","stringify","Find_Winner","fullBoardFlag","startSound","renderGameStatus","handleClick","renderWinnerText","renderResetButton","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1af22e2d.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Square(props) {  \r\n    return (        \r\n      <button className={'square '+ props.slot_flag} onClick={props.onClick}>\r\n        {props.symbol}  \r\n      </button>\r\n    ); \r\n}\r\nexport default Square;","import Square from \"./Square.js\";\r\nimport React from \"react\";\r\n\r\nclass Board extends React.Component {\r\n  renderSquare(i) {\r\n    var flag;\r\n    this.stored_slots = JSON.parse(window.localStorage.getItem(\"table\"));\r\n\r\n    if (\r\n      this.win_slots &&\r\n      (this.win_slots[0] === i ||\r\n        this.win_slots[1] === i ||\r\n        this.win_slots[2] === i)\r\n    ) {\r\n      flag = \"win\";\r\n    } else {\r\n      flag = \"neutral\";\r\n    }\r\n\r\n    return (\r\n      <Square\r\n        className={\"bob\"}\r\n        slot_flag={flag}\r\n        symbol={this.stored_slots[i]}\r\n        onClick={() => this.props.onClick(i)}\r\n      />\r\n    );\r\n  }\r\n\r\n  render() {\r\n    this.win_slots = Find_win_slots(this.stored_slots);\r\n    return (\r\n      <div id=\"board\">\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(0)}\r\n          {this.renderSquare(1)}\r\n          {this.renderSquare(2)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(3)}\r\n          {this.renderSquare(4)}\r\n          {this.renderSquare(5)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(6)}\r\n          {this.renderSquare(7)}\r\n          {this.renderSquare(8)}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction Find_win_slots(stored_slots) {\r\n  stored_slots = JSON.parse(window.localStorage.getItem(\"table\"));\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (\r\n      stored_slots[a] &&\r\n      stored_slots[a] === stored_slots[b] &&\r\n      stored_slots[a] === stored_slots[c]\r\n    ) {\r\n      var line_to_return = lines[i];\r\n      //var slot_symbol_to_return = stored_slots[i]\r\n    }\r\n  }\r\n  //this.setState({win_slots: line_to_return})\r\n  return line_to_return;\r\n  //return null;\r\n}\r\n\r\nexport default Board;\r\n","export default __webpack_public_path__ + \"static/media/start-sound.3237a22b.wav\";","export default __webpack_public_path__ + \"static/media/click-sound.2eabeac7.wav\";","export default __webpack_public_path__ + \"static/media/end-sound.492ea39f.wav\";","export default __webpack_public_path__ + \"static/media/draw-sound.7ebf8a8f.wav\";","export default __webpack_public_path__ + \"static/media/reset-sound.b222ebf0.wav\";","import React from \"react\";\r\nimport Board from \"./Board.js\";\r\nimport startSound from \"./start-sound.wav\";\r\nimport clickSound from \"./click-sound.wav\";\r\nimport endSound from \"./end-sound.wav\";\r\nimport drawSound from \"./draw-sound.wav\";\r\nimport resetSound from \"./reset-sound.wav\";\r\n\r\nclass Game extends React.Component {\r\n  constructor(props) {\r\n    const table = [];\r\n    if (window.localStorage.getItem(\"table\")) {\r\n      const stored_slots = JSON.parse(window.localStorage.getItem(\"table\"));\r\n      for (let i = 0; i < 9; i++) {\r\n        table[i] = stored_slots[i];\r\n      }\r\n    } else {\r\n      for (let i = 0; i < 9; i++) {\r\n        table[i] = null;\r\n      }\r\n    }\r\n    let nextPlayer = true;\r\n    if (window.localStorage.getItem(\"nextPlayer\") === \"false\") {\r\n      nextPlayer = false;\r\n    }\r\n    super(props);\r\n    this.state = { slots: table, Player_X_is_next: nextPlayer };\r\n    this.isMovePossible = true;\r\n    this.winner = \"\";\r\n  }\r\n\r\n  handleResetButton() {\r\n    const slots = this.state.slots.slice();\r\n    //const Next_player = true;\r\n    Clear_Board(slots);\r\n    this.setState({ slots: slots /* Player_X_is_next: Next_player */ });\r\n    this.isMovePossible = true;\r\n    let audio_reset = new Audio(resetSound);\r\n    audio_reset\r\n      .play()\r\n      .then(() => {})\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  handleClick(i) {\r\n    const slots = this.state.slots.slice();\r\n    if (this.isMovePossible === false) {\r\n      return;\r\n    } else if (this.state.Player_X_is_next === true && slots[i] === null) {\r\n      slots[i] = \"X\";\r\n      this.setState({ slots: slots, Player_X_is_next: false });\r\n    } else if (this.state.Player_X_is_next === false && slots[i] === null) {\r\n      slots[i] = \"O\";\r\n      this.setState({ slots: slots, Player_X_is_next: true });\r\n    }\r\n\r\n    let audio_click = new Audio(clickSound);\r\n    audio_click\r\n      .play()\r\n      .then(() => {})\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  renderResetButton() {\r\n    if (this.isMovePossible === false || !this.state.slots.includes(null)) {\r\n      return (\r\n        <ResetButton\r\n          className=\"resetButton\"\r\n          onClick={() => this.handleResetButton()}\r\n        />\r\n      );\r\n    } else {\r\n      return \"\";\r\n    }\r\n  }\r\n\r\n  renderWinnerText() {\r\n    if (this.winner || !this.state.slots.includes(null)) {\r\n      this.isMovePossible = false;\r\n      let winner_message = \"Draw\";\r\n      if (this.winner) {\r\n        winner_message = \"The Winner is: Player \" + this.winner;\r\n\r\n        let audio_end = new Audio(endSound);\r\n        audio_end\r\n          .play()\r\n          .then(() => {})\r\n          .catch((error) => {\r\n            console.log(error);\r\n          });\r\n      } else {\r\n        let audio_draw = new Audio(drawSound);\r\n        audio_draw\r\n          .play()\r\n          .then(() => {})\r\n          .catch((error) => {\r\n            console.log(error);\r\n          });\r\n      }\r\n      return <Winner className=\"winner\" winnerPlayer={winner_message} />;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  renderGameStatus() {\r\n    window.localStorage.setItem(\"table\", JSON.stringify(this.state.slots));\r\n    this.winner = Find_Winner(this.state.slots);\r\n    if (this.winner) {\r\n      this.isMovePossible = false;\r\n    }\r\n    let Next_player; //= \"Next player: X\";\r\n    if (this.state.Player_X_is_next === true) {\r\n      Next_player = \"Next Player: X\";\r\n    } else {\r\n      Next_player = \"Next Player: O\";\r\n    }\r\n    window.localStorage.setItem(\"nextPlayer\", this.state.Player_X_is_next);\r\n    let fullBoardFlag = true;\r\n    for (let i = 0; i < 9; i++) {\r\n      if (this.state.slots[i] === null) {\r\n        fullBoardFlag = false;\r\n      }\r\n    }\r\n    if (this.isMovePossible === false || fullBoardFlag === true) {\r\n      Next_player = \"GAME OVER!\";\r\n    }\r\n    return Next_player;\r\n  }\r\n\r\n  componentDidMount() {\r\n    let audio_start = new Audio(startSound);\r\n    audio_start\r\n      .play()\r\n      .then(() => {})\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"main\">\r\n        <div className=\"status\">{this.renderGameStatus()}</div>\r\n        <Board symbol={this.props.slots} onClick={(i) => this.handleClick(i)} />\r\n        <div className=\"winner\">{this.renderWinnerText()}</div>\r\n        <div id=\"reset_button_div\">{this.renderResetButton()}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction Find_Winner(slots) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (slots[a] && slots[a] === slots[b] && slots[a] === slots[c]) {\r\n      return slots[a];\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\nfunction Clear_Board(slots) {\r\n  for (let i = 0; i < 9; i++) {\r\n    slots[i] = null;\r\n  }\r\n  //console.log(\"Board now is clean\");\r\n  return slots;\r\n}\r\n\r\nfunction Winner(props) {\r\n  return <div className=\"winner\">{props.winnerPlayer}</div>;\r\n}\r\n\r\nfunction ResetButton(props) {\r\n  return (\r\n    <button className=\"resetButton\" onClick={props.onClick}>\r\n      RESTART\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Game;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Game from './Game.js';\r\n\r\n\r\n  class App extends React.Component {  \r\n    render() {         \r\n      return (\r\n        <div className=\"game\">\r\n          <div className=\"game-board\">\r\n            <Game />\r\n          </div>\r\n          <div className=\"game-info\">\r\n            <div>{/* status */}</div>\r\n            <ol>{/* TODO */}</ol>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  // ========================================\r\n  \r\n  ReactDOM.render(\r\n    <App />,\r\n    document.getElementById('root')\r\n  );\r\n    "],"sourceRoot":""}